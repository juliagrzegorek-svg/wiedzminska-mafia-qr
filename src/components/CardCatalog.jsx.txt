import React, { useEffect } from "react";
import { HEROES, MONSTERS, abilityById } from "../data/gameData.js";

const cls = (...xs) => xs.filter(Boolean).join(" ");

function CatalogCard({ img, title, role, abilityTitle, abilityDesc }) {
  return (
    <article className="overflow-hidden rounded-2xl border border-zinc-700/60 bg-zinc-900">
      {img && (
        <div className="aspect-[4/3] w-full overflow-hidden bg-zinc-950">
          <img
            src={img}
            alt={title}
            className="h-full w-full object-cover"
            onError={(e) => (e.currentTarget.style.display = "none")}
          />
        </div>
      )}
      <div className="p-4">
        <h3 className="text-lg font-semibold text-zinc-100">{title}</h3>
        <p className="mt-1 text-sm text-zinc-300">Co robi: {role}</p>
        {abilityTitle && (
          <div className="mt-2 text-sm">
            <div className="font-medium text-emerald-400">Zdolność: {abilityTitle}</div>
            {abilityDesc && <p className="mt-1 text-zinc-300">{abilityDesc}</p>}
          </div>
        )}
      </div>
    </article>
  );
}

export default function CardCatalog({ open, onClose }) {
  useEffect(() => {
    if (!open) return;
    const onKey = (e) => e.key === "Escape" && onClose();
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [open, onClose]);

  const citizens = HEROES.filter((h) => h.baseAbilityId === "citizen");
  const powered  = HEROES.filter((h) => h.baseAbilityId !== "citizen");

  return (
    <div className={cls("fixed inset-0 z-50", open ? "pointer-events-auto" : "pointer-events-none")}>
      <div className={cls("absolute inset-0 bg-black/70 transition-opacity", open ? "opacity-100" : "opacity-0")} onClick={onClose} />
      <div className={cls(
            "absolute inset-0 mx-auto max-w-3xl bg-zinc-950/95 backdrop-blur",
            "transition-transform duration-300",
            open ? "translate-y-0" : "translate-y-full"
          )} role="dialog" aria-modal="true">
        <header className="sticky top-0 z-10 flex items-center justify-between border-b border-zinc-800 bg-zinc-950/90 px-4 py-3">
          <div className="text-base font-semibold text-zinc-100">Katalog kart</div>
          <button onClick={onClose} className="rounded-lg border border-zinc-700/60 px-3 py-1.5 text-sm text-zinc-300 hover:bg-zinc-900">
            Zamknij
          </button>
        </header>

        <div className="h-[calc(100%-52px)] overflow-y-auto px-4 py-4 space-y-6">
          <section>
            <h2 className="mb-3 text-sm font-semibold uppercase tracking-wider text-zinc-400">Obywatele</h2>
            <div className="space-y-3">
              {citizens.map((h) => (
                <CatalogCard key={h.id} img={h.image} title={h.name} role="Obywatel" />
              ))}
            </div>
          </section>

          <section>
            <h2 className="mb-3 text-sm font-semibold uppercase tracking-wider text-zinc-400">Bohaterowie z mocą</h2>
            <div className="space-y-3">
              {powered.map((h) => {
                const ab = abilityById[h.baseAbilityId];
                return (
                  <CatalogCard
                    key={h.id}
                    img={h.image}
                    title={h.name}
                    role="Bohater"
                    abilityTitle={ab?.title}
                    abilityDesc={ab?.description}
                  />
                );
              })}
            </div>
          </section>

          <section>
            <h2 className="mb-3 text-sm font-semibold uppercase tracking-wider text-zinc-400">Potwory</h2>
            <div className="space-y-3">
              {MONSTERS.map((m) => (
                <CatalogCard
                  key={m.id}
                  img={m.image}
                  title={m.name}
                  role="Potwór"
                  abilityDesc={m.description}
                />
              ))}
            </div>
          </section>
        </div>
      </div>
    </div>
  );
}
